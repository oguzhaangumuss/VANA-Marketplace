{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x842523F4c6c2C35Ad398136a82Ac73BC04C0Bd11",
      "txHash": "0x31dc0dbb2ebad65ce73ea7241c1e398a84c8d7e74c6b2d586186f780aab65a2f",
      "kind": "uups"
    },
    {
      "address": "0xeE5B975cD9f2b91A75964970EB32e2301710378c",
      "txHash": "0x55d6397a0a67c63db565083e04d83c0d978335307ae4251fa0a966fa62caa4cf",
      "kind": "uups"
    },
    {
      "address": "0x1Aa0Af3814b7d9E63bAf8241802DBB5606Fa11EF",
      "txHash": "0x19d01d2fbe941eb4ab80469bd5801f996868062f9316f3fc55275164aed6a1fb",
      "kind": "uups"
    },
    {
      "address": "0x1e6315d28e6a2D2f9EaaB359f8749d0F244B13EB",
      "txHash": "0x6221cc4410f4a1170f7e189172e920838a052377cb2705e590c69fdf1249ad04",
      "kind": "uups"
    },
    {
      "address": "0xc657dBB21e918eABc8b6432f05DF1b45a4564F7F",
      "txHash": "0x35e60f385800d7c6d19fa66dccb46f1679e28e409c05dad14dd4dbf7f3eb890b",
      "kind": "uups"
    },
    {
      "address": "0x74DEA9C18aEc059513809D627a4d9A0e9beACD60",
      "txHash": "0x40b50ad39fa9e9e2e56a48226baf07bce3d173e58e9746ac77f3d6a480b490ec",
      "kind": "uups"
    },
    {
      "address": "0x82982b18F4c0b775194006ADD318Fd4a6AAF7ff5",
      "txHash": "0x967bae0630116d7e94435a80ad58f463b896362f8232a9d92a90343a5d9f27fa",
      "kind": "uups"
    },
    {
      "address": "0x66A759bf10D81983F61Dd4355274E523F9CB01cE",
      "txHash": "0xe7cbeb3fd2c44d2d49779a00e95436d66fe09d052c0d770273caa71d00a45317",
      "kind": "uups"
    },
    {
      "address": "0x5639c89DcE1cEE781054FE5201B8D7046Efd3F04",
      "txHash": "0x77d6aaa8e64b81f67cd0621678092f6bda53ae23485fdfd36e4e8ffb2b4301af",
      "kind": "uups"
    },
    {
      "address": "0x8Bf1149d569d12A63b7E2f5FEeC229Ee220c9fa4",
      "txHash": "0x070384afcad40f7d5345b3b9a69584c36bd694a53a9eaa2cabbe09513e6ff47c",
      "kind": "uups"
    },
    {
      "address": "0x902D8450468B9Ea646A95743BbCFcC59F73cf871",
      "txHash": "0x0d10269b8d2dbfff00faa96084e3d8b849f75b8116d5d017eecaba3f0ef9e592",
      "kind": "uups"
    },
    {
      "address": "0xA10359445A324338366EFb287dc95b67AB6cFd3F",
      "txHash": "0xa2f1a3c1b9e563d1cf634a2970465afc7fbadb42f03624fe6a064352a214aac6",
      "kind": "uups"
    },
    {
      "address": "0x6d2A92890c0875caE4053B18d0fdc138BE3A1497",
      "txHash": "0x47966218efad0baf130a7e757a65656131fe9de10d66ed31febaabe737c39f54",
      "kind": "uups"
    },
    {
      "address": "0xc653628210F28660282D560307dA00c69CA48E59",
      "txHash": "0xa26aed9fb65bdeae25dad5d3f423deb4e4862539479721e0eb05b929b20d5ae0",
      "kind": "uups"
    },
    {
      "address": "0x0d00C06B7888f20Be07e49E530fA49753ebA7c5d",
      "txHash": "0x143a30624ec6d67a2a00742aec67d3e08091b8a31195083dd523888dc9351f85",
      "kind": "uups"
    },
    {
      "address": "0x409754Cb566e70B66BeCEF19cf74cf45b16f8a9E",
      "txHash": "0x37023d3d75af56970a26426bb4a2f5f796cd419c4f2243fb284a4e406d31a450",
      "kind": "uups"
    },
    {
      "address": "0xF3e2F4bBb469E9d0fA7614f08775E5598A4f03cE",
      "txHash": "0xe856259591fc0fe39a68b7781a348177c15ec656034929731885a1a862a3966c",
      "kind": "uups"
    },
    {
      "address": "0xa719Cb3c7E60b780270Ff9f4d29F95A3553c4d09",
      "txHash": "0x69bd6569826590f1a460cbf8be956ec408a5c39914e7eabbcea618d51421c408",
      "kind": "uups"
    },
    {
      "address": "0x47C08078f3cccd425fB6cb090493f32d44FBa615",
      "txHash": "0xdcc928987133ae1ea848b7f32ecdb80889524ff346571d2ccf9d1ff654e59276",
      "kind": "uups"
    },
    {
      "address": "0xf37cA47E93633a0143Ff7ac1bA4C1B981DE11372",
      "txHash": "0x8d2ff2ff304e9d77e19331a8034785904c51d784fd82ce5d4f6173c25118a12c",
      "kind": "uups"
    },
    {
      "address": "0x84123133b87Af038Ab3F5d612D7352c60140F9d3",
      "txHash": "0xd2ff0f08697f70dcce8164aac9e4df80fb3312a8696fd1bfc4570519b8348cab",
      "kind": "uups"
    },
    {
      "address": "0x9BB53ddE8e3819CE346D7A1f2c5da7a1896b6730",
      "txHash": "0x27b5edc0636155dbb4bdccffb9f1e593d0d4fb2ff185b53aeec4f5acd103b574",
      "kind": "uups"
    },
    {
      "address": "0x9495f77B160Cbd95D6092aCED0b672Ab685eAcfC",
      "txHash": "0x4da831017d3360302d50bfc504c285cf28efd07a43f3c2351de37998e856a69e",
      "kind": "uups"
    },
    {
      "address": "0x91707b120f0C87eAF4fd046e72CeD5930171EFd5",
      "txHash": "0xc4ceca7b8c84d2a2cf9c26dad557e058237633afb881a5f574319e0e4738a7b3",
      "kind": "uups"
    },
    {
      "address": "0x3C7c4f3e8A5da4ffa73251ab3c719E279c7fF897",
      "txHash": "0x58f9487b88a7b9471a28816936d688c0c88f908cf3e1576f11ed2f3625a28426",
      "kind": "uups"
    },
    {
      "address": "0xB2C116ca4AC4Eb2DA3F47a576F877bB0234846FD",
      "txHash": "0x134bfa724bfc06bf0802af08da3bce63875b9c064134f314edc23e111b588a3a",
      "kind": "uups"
    },
    {
      "address": "0x73EB21D175005d8658b2E93FD7B7200410E8aA8f",
      "txHash": "0xa0f7c480ecad428eb96e7b5fa75e433bd93ee12f0a7f703bcd16f0ee67f2dc2f",
      "kind": "uups"
    },
    {
      "address": "0xf0940CcE4E2550f76B55546f1B352cbB5737dD6f",
      "txHash": "0xf76efc94530256017f4e043f42a40bfb2d579eaf12c3a2a1b9efe4cb47b88e0b",
      "kind": "uups"
    },
    {
      "address": "0x6D6dB1Cb3D74F2c20c36072c3DD09F18a33656cA",
      "txHash": "0xb28f582bab6101efb6f2e1737e42b63313e2a04074c2e58590aca0594af644de",
      "kind": "uups"
    },
    {
      "address": "0x30Cf3c87Fe99698C4ECE4032495f6A64A8f7E621",
      "txHash": "0x7a7398ef21c9f472f5e2a1c1893c4fa45dd06be964a07352a66940a8cfaec37f",
      "kind": "uups"
    }
  ],
  "impls": {
    "bd2a36938b2d5fdca4058b54ac805ca60e1e1d08ea1147bd0b7f48201745dda7": {
      "address": "0x66E5F3474C692c1C79ef43A5E6460C1660C902FA",
      "txHash": "0x1c5780e291258fa8ef3cc31bda2b5d1353477890dfbbf5192f4394dfaddd7849",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(RoyaltyInfo)2232_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:31"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2232_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:38"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2820_storage",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:39"
          },
          {
            "label": "baseTokenURI",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:40"
          },
          {
            "label": "_mintPrice",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:41"
          },
          {
            "label": "revealed",
            "offset": 0,
            "slot": "355",
            "type": "t_bool",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:44"
          },
          {
            "label": "hiddenMetadataUri",
            "offset": 0,
            "slot": "356",
            "type": "t_string_storage",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:45"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "357",
            "type": "t_bytes32",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:48"
          },
          {
            "label": "whitelistMinted",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VanaNFTCollection",
            "src": "contracts/VanaNFTCollection.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2232_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2820_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2232_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "2e954b0dd7285ba65064bacdb2e1cafbf342131ec62dfe6d04d734d4b1d258b8": {
      "address": "0xF0B183CF0fe7f601b6DC72bb86d4AE021C2f1E2a",
      "txHash": "0x10a701d09d680bc58071652b685a4fb2271cee1246ecb1e7685be451536073b2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(RoyaltyInfo)2360_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:31"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:53"
          },
          {
            "label": "_mintedCount",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:54"
          },
          {
            "label": "iteratedUri",
            "offset": 0,
            "slot": "403",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:55"
          },
          {
            "label": "tokenBaseURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:56"
          },
          {
            "label": "placeholderTokenUri",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:57"
          },
          {
            "label": "hiddenMetadata",
            "offset": 0,
            "slot": "406",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:58"
          },
          {
            "label": "mintGroups",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_struct(MintGroup)4933_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:61"
          },
          {
            "label": "groupIndexByName",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:62"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_struct(Creator)4938_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:65"
          },
          {
            "label": "groupMintStatus",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Creator)4938_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.Creator[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MintGroup)4933_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.MintGroup[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
            "label": "mapping(string => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Creator)4938_storage": {
            "label": "struct SericaNFTCollection.Creator",
            "members": [
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "share",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MintGroup)4933_storage": {
            "label": "struct SericaNFTCollection.MintGroup",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unitPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mintedInGroup",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2360_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "b9864731ab320a044d298adbce99a04ccc28fad79fda0fb86241284e2f14e692": {
      "address": "0x2a4031A09b11e9DF610981035DF3bf0dfAdaB1Bc",
      "txHash": "0xabbdeb0f8a7409fe667ba555114e5359bbf1755b670bf4e44ef079481635bf97",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(RoyaltyInfo)2360_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:31"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:54"
          },
          {
            "label": "_mintedCount",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:55"
          },
          {
            "label": "iteratedUri",
            "offset": 0,
            "slot": "403",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:56"
          },
          {
            "label": "tokenBaseURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:57"
          },
          {
            "label": "placeholderTokenUri",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:58"
          },
          {
            "label": "hiddenMetadata",
            "offset": 0,
            "slot": "406",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:59"
          },
          {
            "label": "mintGroups",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_struct(MintGroup)7170_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:62"
          },
          {
            "label": "groupIndexByName",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:63"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_struct(Creator)7175_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:66"
          },
          {
            "label": "groupMintStatus",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:70"
          },
          {
            "label": "walletMintCount",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Creator)7175_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.Creator[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MintGroup)7170_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.MintGroup[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
            "label": "mapping(string => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))": {
            "label": "mapping(string => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Creator)7175_storage": {
            "label": "struct SericaNFTCollection.Creator",
            "members": [
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "share",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MintGroup)7170_storage": {
            "label": "struct SericaNFTCollection.MintGroup",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unitPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mintedInGroup",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintPerWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2360_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "369ee2e36a34d2974608eb74888a662d6e34d05aedadf9c389971fd5016aef37": {
      "address": "0x69177E469bc42Df8512B7133C858f5595E4C158E",
      "txHash": "0x449ca40a476baf452e738b8bd9383e1330e068c4ea88f56243f15cd1426e75a8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(RoyaltyInfo)2360_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:31"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:54"
          },
          {
            "label": "_mintedCount",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:55"
          },
          {
            "label": "iteratedUri",
            "offset": 0,
            "slot": "403",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:56"
          },
          {
            "label": "tokenBaseURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:57"
          },
          {
            "label": "placeholderTokenUri",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:58"
          },
          {
            "label": "hiddenMetadata",
            "offset": 0,
            "slot": "406",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:59"
          },
          {
            "label": "mintGroups",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_struct(MintGroup)4935_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:62"
          },
          {
            "label": "groupIndexByName",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:63"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_struct(Creator)4940_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:66"
          },
          {
            "label": "groupMintStatus",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:70"
          },
          {
            "label": "walletMintCount",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Creator)4940_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.Creator[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MintGroup)4935_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.MintGroup[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
            "label": "mapping(string => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))": {
            "label": "mapping(string => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Creator)4940_storage": {
            "label": "struct SericaNFTCollection.Creator",
            "members": [
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "share",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MintGroup)4935_storage": {
            "label": "struct SericaNFTCollection.MintGroup",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unitPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mintedInGroup",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintPerWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2360_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    },
    "50de60f5c754ac5da6743b79293c12def1dc334b7f0535151921e8d096c0c46a": {
      "address": "0x8fAac9064c5B02D5add5A662Cea21eCe16b1c5e7",
      "txHash": "0x239bbdc4737d0da8a881ab3519f721796de5e7e44f48ce6f68dc2ebcf8476c2d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(RoyaltyInfo)2360_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:31"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:119"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "251",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:54"
          },
          {
            "label": "_mintedCount",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:55"
          },
          {
            "label": "iteratedUri",
            "offset": 0,
            "slot": "403",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:56"
          },
          {
            "label": "tokenBaseURI",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:57"
          },
          {
            "label": "placeholderTokenUri",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:58"
          },
          {
            "label": "hiddenMetadata",
            "offset": 0,
            "slot": "406",
            "type": "t_bool",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:59"
          },
          {
            "label": "mintGroups",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_struct(MintGroup)4935_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:62"
          },
          {
            "label": "groupIndexByName",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:63"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "409",
            "type": "t_array(t_struct(Creator)4940_storage)dyn_storage",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:66"
          },
          {
            "label": "groupMintStatus",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:70"
          },
          {
            "label": "walletMintCount",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))",
            "contract": "SericaNFTCollection",
            "src": "contracts/SericaNFTCollection.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Creator)4940_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.Creator[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MintGroup)4935_storage)dyn_storage": {
            "label": "struct SericaNFTCollection.MintGroup[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
            "label": "mapping(string => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))": {
            "label": "mapping(string => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2360_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Creator)4940_storage": {
            "label": "struct SericaNFTCollection.Creator",
            "members": [
              {
                "label": "wallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "share",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MintGroup)4935_storage": {
            "label": "struct SericaNFTCollection.MintGroup",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unitPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "mintedInGroup",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintPerWallet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)2360_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        },
        "namespaces": {}
      }
    }
  }
}
